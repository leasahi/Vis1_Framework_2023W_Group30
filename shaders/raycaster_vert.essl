

 uniform vec3 cameraPos;
 uniform vec3 volumeScale;

 flat out vec3 transformedEye;
 out vec3 rayDirection;

void main() {

    transformedEye = cameraPos / volumeScale + 0.5;
    rayDirection = (position / volumeScale + 0.5) - transformedEye;

    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0);
    gl_Position = projectionMatrix * mvPosition;

}